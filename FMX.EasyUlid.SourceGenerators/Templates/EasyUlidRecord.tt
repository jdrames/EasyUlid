<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a FMX.EasyUlids.SourceGenerator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using FMX.EasyUlid;
using FMX.EasyUlid.Core;
using System.ComponentModel;

#nullable enable

namespace <#= Model.Namespace #>
{
	[TypeConverter(typeof(EasyUlidTypeConverter<<#= Model.Name #>>))]		
	public partial record <#= Model.Name #>(Ulid Value) : IEasyUlid<<#= Model.Name #>> {
		public static <#= Model.Name #> New() => new(Ulid.NewUlid());
		public static <#= Model.Name #> Parse(string input) => new(Ulid.Parse(input));
		public static bool TryParse(string input, out <#= Model.Name #>? easyUlid)
		{
			if(!Ulid.TryParse(input, out var ulidId))
			{
				easyUlid = null;
				return false;
			}

			easyUlid = new(ulidId);
			return true;
		}

		public override string ToString() => Value.ToString();

		public static implicit operator string(<#= Model.Name #> id) => id.ToString();
		public static implicit operator <#= Model.Name #>(string input) => Parse(input);
	}	
}